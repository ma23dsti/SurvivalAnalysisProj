---
title: "Survival Analysis Project"
format: pdf
editor: visual
execute:
  message: false
  warning: false
---

Project outline:

-   Introduction
-   Prepare data
-   Short EDA
-   Perform analysis with multiple methods (4-5-6)
-   Chose 2-3
-   Chose what to keep (maximum 9 pages)

# Introduction

In terms of survival analysis, the objective of this project is to determine the "risk" that pets in an animal shelter have of being adopted (or even duration in the shelter), based on different characteristics that are available in the chosen data set. It is worth mentioning that the data contains different outcomes for the animals: adoption, transfer, or no outcome. However, in our case we will only use a dichotomous output indicating whether it was adopted or not. The data ends on February 2, 2018, after which date it is not known what happens to the animals.

We will also analyze how the following variables, when possible to include them, may influence the adoption or non-adoption of the animals.

Data dictionary:

-   id: unique id for each animal
-   age_upon_outcome: age of the animal when the outcome was determined
-   animal_type: cat, dog, or ... something else
-   breed: breed of the animal
-   color: color of the animal
-   date_of_birth: date of birth of the animal
-   datetime: date and time when the outcome was determined
-   name: name of the animal
-   outcome_type: there are three possible outcomes: adoption, transfer, no outcome (euthanized, died)
-   sex: sex of the animal
-   spay_neuter: whether the animal was spayed or neutered: intact or fixed

# Data preparation

## Load necessary libraries and data

```{r}
# Packages for data preparation
library(dplyr)
library(gtsummary)
library(readr)
library(skimr)
library(gt)

# Packages for analyzing survival data
library(survival)
library(survminer)

raw_data <- read_csv("data/train.csv")

```

## EDA

At a quick glance at the data, we observe that in the case of categorical variables we will have to make modifications in order to be able to work with them, for example in the case of breed, color and name we have too many different types or levels, which would be impossible to use them all. The variable name, on the other hand, has a significant number of null values.

```{r}
#| echo: false

#raw_data |> 
#  summary()

skim(raw_data) |>
  filter(skim_type == "character")
```

In order to be able to work with this data, these will be the first modifications we will make:

-   Since the variables `breed` and `color` have too many different combinations, we will remove them from our data, they will not be useful for our models.

-   We have names for 69.8% of the animals, so in order to use it, we will create a dummy variable `has_name`, a variable that indicates that if there is a name or not.

-   Also, we decided to treat the `animal_type` and `sex` variables as factors, so they can enter the model.

-   For the duration data, we have the `age_upon_outcome` which is the difference between `date_of_birth` and `datetime` but this is not numeric, so we create our own variable `time_to_outcome`.

-   We will work with `spay_neuter` as our grouping variable. We would like to verify if there are differences in adoption times if the animal is spay neutered or not. If we have an `Unknown` in the variable, we will encode it as `Intact`, as knowing for sure how the animal has been handled is important.

-   We keep `animal_type`, `sex` and `spay_neuter` as they are, the only modification in this case will be that for `animal_type`, since there are only 5 observations in Livestock, we will join this category to Other. In summary we have a majority of dogs and cats, in sex variable 44% of female, 48% of male and 8% classified as Unknown. In the case of spaying and neutering, we have 68% fixed, 24% intact and 8% classified as Unknown.

```{r}

raw_data <- raw_data |> 
  mutate(has_name = !is.na(name), # If not NA, then it has a name. 
         sex = as.factor(sex),
         time_to_outcome = as.Date(datetime) - date_of_birth,
         spay_neuter = as.factor(if_else(spay_neuter == "Unknown", "Intact", spay_neuter)),
         animal_type = as.factor(if_else(animal_type == "Livestock","Other", animal_type))
         )
```

```{r}
#| eval: false
#| echo: false

raw_data |> 
  count(animal_type) |>
  mutate(prop = round(n / sum(n) * 100,1)) |> 
  gt()
  

raw_data |> 
  count(sex) |>
  mutate(prop = round(n / sum(n) * 100,1)) |> 
  gt()

raw_data |> 
  count(spay_neuter) |>
  mutate(prop = round(n / sum(n) * 100,1)) |> 
  gt()


```

In the case of the output variable, where the possibilities are adopted, unadopted or unknown, we will create a new variable `outcome` for which we take `1` for adoption and `0` for no adoption or unknown.

```{r}
#| echo: false
#| 
raw_data <- raw_data |> 
  mutate(outcome = if_else(outcome_type == "adoption", 1, 0))

raw_data |> 
  count(outcome) |>
  mutate(prop = round(n / sum(n) * 100,1)) |>  
  gt()
```

Finally, since we got some negative values for our variable `time_to_outcome` , which makes no sense as the `date_of_birth` should come before the outcome, we will remove these five observations (5).

```{r}
#| echo: false
raw_data <- raw_data |> 
  filter(time_to_outcome >= 0)
```

Now we chose the variable we will use as a clean data , check that they have the desired formats and do some previous analysis on the variables.

```{r}
#| echo: false

data <- raw_data |> 
  select(id, time_to_outcome, animal_type, has_name, sex, spay_neuter,outcome) |> 
  mutate(id = as.character(id))

dplyr::glimpse(data)

#TODO: add table name
tbl_cross(data, row = spay_neuter, col = outcome,percent = c("row"), digits = 0)|> 
  bold_labels()
```

Within the animals, there is not a difference that seems to be important according to sex, at least not proportionally. In the case of animals with names, more than 70% have been adopted against 26% in the case of those without names. Something similar happens with the animals that have been spayed or neutered, the proportion of adopted animals in this case exceeds 80%, while in the group of those that are not known or have not undergone surgery, the percentage of adopted animals is barely 20%. Lastly, dogs are not only the largest number of animals but also have the highest adoption rate, while among cats and birds there is practically half and half between adoptees and non-adoptees.[^1]

[^1]: The cross tables for the variables `sex`, `animal_type` and `has_name`, see appendix 1.

# Statistical Analysis

The next graph is the survival curve and the cumulative hazard function, for this data:

```{r}
#| echo: false

#survival object
so <- survfit(Surv(time_to_outcome, outcome) ~ 1, data =data[,-1] )

par(mfrow=c(1,2))
#TODO: fix this graph
#so |>
#  autoplot() +
#  ylab("S(t)") +
#  xlab("Time")

#Cumulative
ggsurvplot(so, data = data,fun = "cumhaz")

```

Example options given by instructions:

-   nonparametric estimation of survival for one or more groups

-   nonparametric comparison of 2 or more groups

-   semi-parametric Cox regression

## Nonparametric methods for censored data

Using the Kaplan-Meyer estimator (KM) methodology we can see that the median survival time is 749 days (in this particular case the time from birth to adoption, and it's about 2 years). If we estimate the probability of not being adopted when the animal is (at least) one year old, we see that this value is 71.9%.

```{r}
KM <- survfit(Surv(time_to_outcome, outcome) ~ 1 , data = data[,-1]) 
KM 

plot(KM, mark.time = TRUE, main = "Kaplan-Meier estimator",
     ylab = 'Survival probability',
     xlab = 'time(days)')

#estimated probability of not being adopted for (at least) 1 year
summary(KM, time = 365)
```

## Nonparametric comparison of groups

Even if we do not have two groups in the dataset, for example with different treatments, we want to use this technique to analyze, for example, whether or not being part of the females group contributes to being adopted more quickly. So, the null hypothesis or question that we are going to try to answer is if the survival curves generated for the groups are the same, and the alternative hypothesis is that they are different. We will perform the logrank test.

```{r}
#| echo: false

sex_comp <- survfit(Surv(time_to_outcome, outcome) ~ sex, data = data)
sex_comp

plot(sex_comp,mark.time = T, lty = 2:4,col=2:4)
legend("right", legend=unique(data$sex), col=2:4, lty=2:4, horiz=FALSE,  bty='n')

# The logrank test
survdiff(Surv(time_to_outcome, outcome) ~ sex, data = data)

```

As we can see both in the graph and in the logrank test, there is statistical evidence to reject the null hypothesis of equality between curves, and this is due to the fact that although there do not seem to be differences between male and female, in those animals for which the sex is not determined, there do seem to be differences in the time from birth to adoption.

In the `has_name` we get also a difference between the curves and it looks like the adoption goes faster for those animal that don't have a name at the moment of adoption. We can perform the same process with other categorical variables[^2].

[^2]: for further information look at Appendix 2

## Multivariate Cox regression

```{r}
cox_model <- coxph(Surv(time_to_outcome, outcome) ~ animal_type + has_name + sex + spay_neuter, data = data)
summary(cox_model)

```

Let's see our predicted survival proportion for the whole data.

```{r}
ggsurvplot(survfit(cox_model), data = data)
```

Now, we can verify how this survival changes depending on the `spay_neuter` variable.

```{r}
# Prediction
spay_neutered_data <- tibble(animal_type = c('Dog', 'Dog'),
                             has_name = c(TRUE,TRUE),
                             sex = c("Male", "Male"),
                             spay_neuter = c('Fixed', 'Intact'))


# Fit a prediction
fit <- survfit(cox_model, newdata = spay_neutered_data)

ggsurvplot(fit, data = data, conf.int = TRUE,
            legend.labs = c("spay_neuter = Fixed", "spay_neuter = Intact")) 
```

As expected, animal which were spay neutered, have shorter survival time, that means they were adopted faster.

# Appendix

## Appendix 1: cross tables

```{r}

tbl_cross(raw_data, row = has_name, col = outcome, percent = c("row"), digits = 0) %>%
  bold_labels() %>%
  as_gt() %>%
  tab_header(title = md("**Table 1: Has Name vs Outcome**"))

tbl_cross(raw_data, row = sex, col = outcome, percent = c("column"), digits = 0) %>%
  bold_labels() %>%
  as_gt() %>%
  tab_header(title = md("**Table 2: Sex vs Outcome**"))

tbl_cross(raw_data, row = animal_type, col = outcome, percent = c("row"), digits = 0) %>%
  bold_labels() %>%
  as_gt() %>%
  tab_header(title = md("**Table 3: Animal Type vs Outcome**"))



```

## Appendix 2: Nonparametric comparison of groups

Variable `has_name`

```{r}

has_name_comp <- survfit(Surv(time_to_outcome, outcome) ~ has_name, data = data)

has_name_comp  

plot(has_name_comp,mark.time = T, lty = 2:3,col=2:3) 
legend("right", legend=unique(data$has_name), col=2:3, lty=2:3, horiz=FALSE,  bty='n') 
```

Variable `animal_type`

```{r}
type_comp <- survfit(Surv(time_to_outcome, outcome) ~ animal_type, data = data)
type_comp

plot(type_comp,mark.time = T, lty = 2:6,col=2:6)
legend("right", legend=unique(data$animal_type), col=2:6, lty=2:6, horiz=FALSE,  bty='n')

# The logrank test
survdiff(Surv(time_to_outcome, outcome) ~ animal_type, data = data)
```

Variable `spay_neuter`

```{r}
spay_neuter_comp <- survfit(Surv(time_to_outcome, outcome) ~ spay_neuter, data = data)
spay_neuter_comp

plot(spay_neuter_comp,mark.time = T, lty = 2:3,col=2:3)
legend("right", legend=unique(data$spay_neuter), col=2:3, lty=2:3, horiz=FALSE,  bty='n')

# The logrank test
survdiff(Surv(time_to_outcome, outcome) ~ spay_neuter, data = data)
```
